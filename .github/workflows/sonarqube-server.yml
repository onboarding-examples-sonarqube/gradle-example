on:
  # Trigger analysis when pushing to your main branches, and when creating a pull request.
  push:
    paths:
      - 'sonar-scanner-gradle/gradle-basic/**'
    branches:
      - main
      - master
      - develop
      - 'releases/**'
  pull_request:
      types: [opened, synchronize, reopened]
  workflow_dispatch:

name: SonarQube-Server
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available
      - name: Cache SonarQube packages
        uses: actions/cache@v4.2.0
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Set Project Key/Name
        # This step sets the project key and project name. It will be OrgName+"-gh"+RepoName. You can modify it as needed.
        id: set-project-key
        run: |
          echo "PROJECT_KEY=$(echo ${{ github.repository }} | cut -d'/' -f1)-gh_$(echo ${{ github.repository }} | cut -d'/' -f2)" >> $GITHUB_ENV
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        run: |
          cd sonar-scanner-gradle/gradle-basic
          ./gradlew build sonar --info -d \
          -Dsonar.projectKey=${PROJECT_KEY} \
          -Dsonar.projectName="Onboarding Example - GitHub - Gradle Example"
